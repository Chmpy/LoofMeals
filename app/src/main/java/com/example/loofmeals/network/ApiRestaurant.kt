package com.example.loofmeals.network

import com.example.loofmeals.data.model.Restaurant

data class ApiRestaurant(
    val businessProductId: String,
    val informationGroup: String,
    val discriminator: String,
    val changedTime: String,
    val deleted: String,
    val name: String,
    val street: String,
    val houseNumber: String,
    val boxNumber: String,
    val postalCode: String,
    val cityName: String,
    val mainCityName: String,
    val distance: String,
    val promotionalRegion: String,
    val x: String,
    val y: String,
    val lat: String,
    val long: String,
    val greenKeyLabeled: String,
    val accessibilityLabel: String,
    val closingPeriod: String,
    val nextYearClosingPeriod: String,
    val phone1: String,
    val phone2: String,
    val phone3: String,
    val email: String,
    val website: String,
    val facebook: String,
    val twitter: String,
    val flickr: String,
    val instagram: String,
    val productDescription: String,
    val linkToAccessibilityWebsite: String,
    val accessibilityDescription: String,
    val entrance: String,
    val routeAndLevels: String,
    val commonToilet: String,
    val allergies: String,
    val extraFacilities: String,
    val foodAllergy: String,
    val deaf: String,
    val auditive: String,
    val mental: String,
    val motor: String,
    val blind: String,
    val visual: String,
    val autism: String,
    val foodAllergyDesc: String,
    val allergiesDesc: String,
    val deafDesc: String,
    val auditiveDesc: String,
    val mentalDesc: String,
    val motorDesc: String,
    val blindDesc: String,
    val visualDesc: String,
    val autismDesc: String,
    val garden: String,
    val spaceTableDesc: String
) {

}

fun List<ApiRestaurant>.asDomainObject(): List<Restaurant> {
    var domainList = this.map {
        Restaurant(
            businessProductId = it.businessProductId,
            informationGroup = it.informationGroup,
            discriminator = it.discriminator,
            changedTime = it.changedTime,
            deleted = it.deleted,
            name = it.name,
            street = it.street,
            houseNumber = it.houseNumber,
            boxNumber = it.boxNumber,
            postalCode = it.postalCode,
            cityName = it.cityName,
            mainCityName = it.mainCityName,
            distance = it.distance,
            promotionalRegion = it.promotionalRegion,
            x = it.x,
            y = it.y,
            lat = it.lat,
            long = it.long,
            greenKeyLabeled = it.greenKeyLabeled,
            accessibilityLabel = it.accessibilityLabel,
            closingPeriod = it.closingPeriod,
            nextYearClosingPeriod = it.nextYearClosingPeriod,
            phone1 = it.phone1,
            phone2 = it.phone2,
            phone3 = it.phone3,
            email = it.email,
            website = it.website,
            facebook = it.facebook,
            twitter = it.twitter,
            flickr = it.flickr,
            instagram = it.instagram,
            productDescription = it.productDescription,
            linkToAccessibilityWebsite = it.linkToAccessibilityWebsite,
            accessibilityDescription = it.accessibilityDescription,
            entrance = it.entrance,
            routeAndLevels = it.routeAndLevels,
            commonToilet = it.commonToilet,
            allergies = it.allergies,
            extraFacilities = it.extraFacilities,
            foodAllergy = it.foodAllergy,
            deaf = it.deaf,
            auditive = it.auditive,
            mental = it.mental,
            motor = it.motor,
            blind = it.blind,
            visual = it.visual,
            autism = it.autism,
            foodAllergyDesc = it.foodAllergyDesc,
            allergiesDesc = it.allergiesDesc,
            deafDesc = it.deafDesc,
            auditiveDesc = it.auditiveDesc,
            mentalDesc = it.mentalDesc,
            motorDesc = it.motorDesc,
            blindDesc = it.blindDesc,
            visualDesc = it.visualDesc,
            autismDesc = it.autismDesc,
            garden = it.garden,
            spaceTableDesc = it.spaceTableDesc
        )
    }
    return domainList
}